#include "s21_matrix.h"
#include "s21_matrix_supplementary.h"
#include "test_utils.h"


#suite is_square
#test generic
  const int rows = rand() % 100 + 1;
  const int cols = rand() % 100 + 1;
  int rc = RC_OK;
  matrix_t m1;
  rc = s21_create_matrix(rows, cols, &m1);
  ck_assert_int_eq(rc, RC_OK);

  bool exp = rows == cols;
  bool res = s21_is_square(&m1);

  ck_assert_int_eq(exp, res);

  s21_remove_matrix(&m1);


#test specific_true
  const int rows = 2;
  const int cols = 2;
  int rc = RC_OK;
  matrix_t m1;
  rc = s21_create_matrix(rows, cols, &m1);
  ck_assert_int_eq(rc, RC_OK);

  bool exp = true;
  bool res = s21_is_square(&m1);

  ck_assert_int_eq(exp, res);

  s21_remove_matrix(&m1);


#test specific_false
  const int rows = 2;
  const int cols = 3;
  int rc = RC_OK;
  matrix_t m1;
  rc = s21_create_matrix(rows, cols, &m1);
  ck_assert_int_eq(rc, RC_OK);

  bool exp = false;
  bool res = s21_is_square(&m1);

  ck_assert_int_eq(exp, res);

  s21_remove_matrix(&m1);
